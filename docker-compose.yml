version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=model-eval
    networks:
      - app-network

  server:
    image: node:18-alpine
    container_name: server
    working_dir: /app/server
    command: >
      sh -c "npm install typescript ts-node-dev express mongoose dotenv cors helmet morgan winston express-async-handler @anthropic-ai/sdk openai @google/generative-ai zod &&
             ./node_modules/.bin/ts-node-dev --transpile-only --respawn src/index.ts"
    ports:
      - "8000:8000"
    volumes:
      - ./packages/server:/app/server
      - ./packages/shared:/app/shared
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=development
      - PORT=8000
      - MONGODB_URI=mongodb://mongodb:27017/model-eval
      - CORS_ORIGINS=http://localhost:3000
    networks:
      - app-network

  client:
    image: node:18-alpine
    container_name: client
    working_dir: /app
    command: >
      sh -c "apk add --no-cache git &&
             npm install -g pnpm &&
             pnpm dlx create-vite@latest temp-client --template react-ts --yes &&
             cp -r packages/shared /app/shared &&
             cd /app/temp-client &&
             npm install --legacy-peer-deps react@18.2.0 react-dom@18.2.0 &&
             npm install --legacy-peer-deps react-router-dom axios @chakra-ui/react @emotion/react @emotion/styled framer-motion react-query react-markdown react-syntax-highlighter react-toastify &&
             cp -r /app/packages/client/src /app/temp-client/ &&
             mkdir -p /app/temp-client/src/test &&
             touch /app/temp-client/src/test/setup.ts &&
             npm run dev -- --host 0.0.0.0"
    ports:
      - "3000:3000"
    volumes:
      - ./packages:/app/packages
    depends_on:
      - server
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://server:8000/api
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge